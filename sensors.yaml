  - platform: waze_travel_time
    name: Eirik til Hjem
    origin: device_tracker.eirik_mobil
    destination: zone.home
    realtime: true
    region: 'EU'

  - platform: waze_travel_time
    name: Hjemmefra til Jobb
    origin: zone.home
    destination: zone.FBU
    realtime: true
    region: 'EU'

  - platform: template
    sensors:
      vacuum_status:
        friendly_name: Status
        value_template: 'Status: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}'
        icon_template: >
          {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.status  %}
          {% if val == 'Charging' %}
            mdi:battery-charging
          {% elif val == 'Cleaning' %}
            mdi:move-resize
          {% elif val == 'Returning home' %}
            mdi:keyboard-return
          {% elif val == 'Idle' %}
            mdi:dots-horizontal
          {% elif val == 'Paused' %}
            mdi:pause-circle
          {% else %}
            mdi:help-circle
          {% endif %}
      vacuum_fan_speed:
        friendly_name: Viftehastighet
        value_template: 'Mode: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}'
        icon_template: 'mdi:speedometer'
      vacuum_battery:
        friendly_name: Batteri
        value_template: 'Battery: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}'
        unit_of_measurement: '%'
        icon_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}'
      vacuum_cleaning_time:
        friendly_name: Forrige tid
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
        icon_template: 'mdi:timer'
      vacuum_cleaned_area:
        friendly_name: Forrige område
        unit_of_measurement: 'm ²'
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area }}'
        icon_template: 'mdi:ruler'
      vacuum_cleanmainbrush:
        friendly_name: Hovedbørste
        unit_of_measurement: 'h'
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_cleansidebrush:
        friendly_name: Sidebørste
        unit_of_measurement: 'h'
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_cleanfilter:
        friendly_name: Filter
        unit_of_measurement: 'h'
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_sensordirtyleft:
        friendly_name: Sensorer
        unit_of_measurement: 'h'
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_do_not_disturb:
        friendly_name: Ikke forstyrr
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb }}'
        icon_template: >
          {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb  %}
          {% if val == 'on' %}
            mdi:do-not-disturb
          {% else %}
            mdi:do-not-disturb-off
          {% endif %}
      vacuum_operation:
        value_template: 'Operasjon'
      vacuum_accessories:
        value_template: 'Vedlikehold'

  - platform: qbittorrent
    url: !secret qbittorrenthost
    username: !secret qbittorrentuser
    password: !secret qbittorrentpassword

  - platform: seventeentrack
    username: !secret seventeenuser
    password: !secret seventeenpass

#  - platform: rest
#    name: Mirai_Versjon
#    json_attributes:
#      - version
#    resource: !secret mirai_rest_version
#    value_template: '{{ value_json.version }}'
#    headers:
#      Authorization: !secret freenas_api_token
#      Content-Type: application/json

  - platform: template
    sensors:
      eirik_status:
        value_template: '{{ states.input_select.eirik_status_dropdown.state }}'
        friendly_name: 'Eirik'
      w_status:
        value_template: '{{ states.input_select.w_status_dropdown.state }}'
        friendly_name: 'W'


  - platform: template
    sensors:
      vvb_navarende_forbruk:
        value_template: '{{ states.switch.varmtvannsbereder.attributes.current_power_w | multiply(0.001) | round(2) }} kW'
        friendly_name: 'Nåværende forbruk'

  - platform: template
    sensors:
      vvb_dagens_forbruk:
        value_template: '{{ states.switch.varmtvannsbereder.attributes.today_energy_kwh }} kWh'
        friendly_name: 'Dagens forbruk'


  - platform: template
    sensors:
      stuetv_source:
        friendly_name: "Stuetv source"
        value_template: "{{ state_attr('media_player.stuetv', 'source') }}"


  - platform: template
    sensors:
      eirik_batteri:
        friendly_name: "Eirik Batteri"
        value_template: "{{ state_attr('device_tracker.eirik_mobil', 'battery_level') }}"

  - platform: template
    sensors:
      eirik_lader:
        friendly_name: "Eirik Lader"
        value_template: "{{ state_attr('device_tracker.eirik_mobil', 'battery_charging') }}"

  - platform: template
    sensors:
      eirik_kjorer:
        friendly_name: "Eirik Kjører"
        value_template: "{{ state_attr('device_tracker.eirik_mobil', 'activity') }}"

  - platform: template
    sensors:
      eirik_hastighet:
        friendly_name: "Eirik hastighet"
        value_template: "{{ state_attr('device_tracker.eirik_mobil', 'speed') }}"

#  - platform: plex_recently_added
#    token: !secret plextokenrecently
#    host: 192.168.1.36
#    port: 32400


#  - platform: nut
#    host: 192.168.1.11
#    name: NUT Garasje
#    alias: garasjeups
#    username: !secret nutuser
#    password: !secret nutpass
#    resources:
#      - ups.status
#      - input.voltage
#      - ups.load
#      - battery.runtime

  - platform: nut
    host: 192.168.1.254
    name: NUT Loft
    alias: loftups
    username: !secret nutuser
    password: !secret nutpass
    resources:
      - ups.status
      - input.voltage
      - ups.load
      - battery.runtime


#  - platform: rest
#    name: Opnsense WAN
#    resource: http://192.168.1.1:3000/lua/rest/get/interface/data.lua?ifid=1
#    json_attributes:
#      - upload
#      - download
#    username: !secret opnsenseuser
#    password: !secret opnsensepass
#    authentication: basic
#    value_template: '{{ value_json.throughput }}'



#  - platform: rest
#    name: Opnsense Upload
#    resource: http://192.168.1.1:19999/api/v1/data?chart=net.re0
#    value_template: '{{ (value_json.data[0][2] / 1024 ) | float | round(2) | abs }}'
#    unit_of_measurement: Mbit\s
#    force_update: true

#  - platform: rest
#    name: Opnsense Download
#    resource: http://192.168.1.1:19999/api/v1/data?chart=net.re0
#    value_template: '{{ (value_json.data[0][1] / 1024 ) | float | round(2) }}'
#    unit_of_measurement: Mbit\s
#    force_update: true

  - platform: template
    sensors:
      varmtvannsbereder_amp:
        friendly_name_template: "{{ states.switch.varmtvannsbereder}} Current"
        value_template: '{{ states.switch.varmtvannsbereder.attributes.current_a | float }}'
        unit_of_measurement: 'A'
      varmtvannsbereder_watts:
        friendly_name_template: "{{ states.switch.varmtvannsbereder}} Current Consumption"
        value_template: '{{ states.switch.varmtvannsbereder.attributes.current_power_w | float }}'
        unit_of_measurement: 'W'
      varmtvannsbereder_total_kwh:
        friendly_name_template: "{{ states.switch.varmtvannsbereder}} Total Consumption"
        value_template: '{{ states.switch.varmtvannsbereder.attributes.total_energy_kwh | float }}'
        unit_of_measurement: 'kWh'
      varmtvannsbereder_volts:
        friendly_name_template: "{{ states.switch.varmtvannsbereder}} Voltage"
        value_template: '{{ states.switch.varmtvannsbereder.attributes.voltage | float }}'
        unit_of_measurement: 'V'
      varmtvannsbereder_today_kwh:
        friendly_name_template: "{{ states.switch.varmtvannsbereder}} Today's Consumption"
        value_template: '{{ states.switch.varmtvannsbereder.attributes.today_energy_kwh | float }}'
        unit_of_measurement: 'kWh'

  - platform: systemmonitor
    resources:
      - type: memory_use
      - type: memory_free
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use
      - type: processor_temperature

#  - platform: rest
#    method: POST
#    resource: http://192.168.1.11/api/v2.0/disk/temperatures
#    payload: '{"names":["da1", "da2", "da3", "da4", "da5", "da6", "da7", "da8", "da9", "da10", "da11", "da12"],"powermode":"NEVER"}'
#    username: !secret fnuser
#    password: !secret fnpass
#    authentication: basic
#    name: freenas disk temp
#    json_attributes:
#      - da1
#      - da2
#      - da3
#      - da4
#      - da5
#      - da6
#      - da7
#      - da8
#      - da9
#      - da10
#      - da11
#      - da12
  
#  - platform: template
#    sensors:
#      disk1:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da1"] }}'
#      disk2:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da2"] }}'
#      disk3:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da3"] }}'
#      disk4:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da4"] }}'
#      disk5:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da5"] }}'
#      disk6:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da6"] }}'
#      disk7:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da7"] }}'
#      disk8:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da8"] }}'
#      disk9:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da9"] }}'
#      disk10:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da10"] }}'
#      disk11:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da11"] }}'
#      disk12:
#        unit_of_measurement: 'C°'
#        value_template: '{{ states.sensor.freenas_disk_temp.attributes["da12"] }}'


#  - platform : command_line
#    name: "Mirai power"
#    command: 'ipmitool -H 192.168.1.253 -U root -P password -I lanplus sdr elist full | grep "System Level" | cut -c 39-41'
#    unit_of_measurement: "W"


  - platform: statistics
    name: "Mirai power per minute"
    entity_id: sensor.mirai_power
    sampling_size: 60

  - platform: template
    sensors:
      mirai_realtime_power:
        friendly_name: "Mirai Realtime Power"
        value_template: "{{state_attr('sensor.mirai_power_per_minute', 'total') / (1000 * 60) }}"
        unit_of_measurement: 'kwH'

  - platform: template
    sensors:
      varmepumpe_stue_realtime_power:
        friendly_name: "Varmepumpe stue kwh realtime"
        value_template: "{{state_attr('sensor.varmepumpe_stue_plugg_energy_power', 'total') / (1000 * 60) }}"
        unit_of_measurement: 'kwH'

  - platform: mqtt
    state_topic: "idracpower"
    name: "Mirai Power"
    unit_of_measurement: "W"

  - platform: mqtt
    name: Zigbee2mqtt Networkmap
    state_topic: zigbee2mqtt/bridge/networkmap/raw
    value_template: >-
      {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
    json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw
