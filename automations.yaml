### Added wakeup and sleeping of house ###

- alias: 'Vekk Huset'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Stue Veggbryteren'
  condition:
    condition: template
    value_template: '{{ "on" == trigger.payload_json.action }}'
  action:
    - service: light.turn_on
      entity_id: light.stuegruppe
    - service: light.turn_on
      entity_id: light.kjokkengruppe
    - service: light.turn_on
      entity_id: light.kjokken_benkelys_under
    - service: light.turn_on
      entity_id: light.stue_peislys
    - service: light.turn_on
      entity_id: light.alvakjokken
    - service: homeassistant.turn_on
      entity_id: media_player.stueforsterker
    - service: homeassistant.turn_on
      entity_id: media_player.stuetv
    - service: switch.turn_on
      entity_id: switch.vindu


- alias: "Adaptive lighting: toggle off in the evening"
  trigger:
    platform: time
    at: "23:59:00"
  action:
    service: homeassistant.turn_off
    entity_id: group.adaptive

- alias: "Adaptive lighting: toggle on in the morning"
  trigger: 
    platform: time
    at: "08:00:00"
  action:
    service: homeassistant.turn_on
    entity_id: group.adaptive


- alias: 'Legg Huset'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Stue Veggbryteren'
  condition:
    condition: template
    value_template: '{{ "off" == trigger.payload_json.action }}'
  action:
    - service: light.turn_off
      entity_id: light.stuegruppe
    - service: light.turn_off
      entity_id: light.kjokkengruppe
    - service: light.turn_off
      entity_id: light.kjokken_benkelys_under
    - service: light.turn_off
      entity_id: light.stue_peislys
    - service: light.turn_off
      entity_id: light.alvakjokken
    - service: homeassistant.turn_off
      entity_id: media_player.stueforsterker
    - service: homeassistant.turn_off
      entity_id: media_player.stuetv
    - service: switch.turn_off
      entity_id: switch.vindu

### Automatically turn on office lights when movement is detected and off after 5 minutes of inactivity ###

- alias: Skru på kontorlys
  trigger:
    platform: state
    entity_id: binary_sensor.eirik_kontor_bevegelse_occupancy
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.eirikgruppe


- alias: Skru av kontorlys etter fem minutter
  trigger:
    platform: state
    entity_id: binary_sensor.eirik_kontor_bevegelse_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 5
  action:
    - service: light.turn_off
      entity_id: light.eirikgruppe

### Always load dark theme ###

- alias: 'Sett mørkt tema'
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: frontend.set_theme
      data:
        name: slate

### Automatic turn on and off lights in the W.C and only turn on small light at night ###

- alias: 'Skru på dolys'
  trigger:
    platform: state
    entity_id: binary_sensor.do_dodor_contact
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.do_hyllelampe


- alias: 'Skru på vegglys do dagtid'
  trigger:
    platform: state
    entity_id: binary_sensor.do_dodor_contact
    from: 'off'
    to: 'on'
  condition:
    condition: time
    after: '08:00:00'
    before: '23:00:00'
  action:
    - service: light.turn_on
      entity_id: light.do_taklys



- alias: 'Skru av dolys'
  trigger:
    platform: state
    entity_id: binary_sensor.do_dodor_contact
    from: 'on'
    to: 'off'
    for:
      minutes: 10
  action:
    - service: light.turn_off
      entity_id: light.do_taklys
    - service: light.turn_off
      entity_id: light.do_hyllelampe


### Automatic lighting in basement ###

- alias: 'Skru på kjellerlys'
  trigger:
    platform: state
    entity_id: binary_sensor.kjeller_apen
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.kjellergruppe

- alias: 'Skru av kjellerlys'
  trigger:
    - platform: state
      entity_id: binary_sensor.kjeller_apen
      from: 'on'
      to: 'off'
      for: '00:10:00'
    - platform: state
      entity_id: binary_sensor.kjeller_vaskerom_bevegelse_occupancy
      from: 'on'
      to: 'off'
      for: '00:05:00'
  condition:
    - condition: state
      entity_id: binary_sensor.kjeller_apen
      state: 'off'
      for: '00:10:00'
    - condition: state
      entity_id: binary_sensor.kjeller_vaskerom_bevegelse_occupancy
      state: 'off'
      for: '00:05:00'
  action:
    - service: light.turn_off
      entity_id: light.kjellergruppe


### Added office morning annonuncements ###

- alias: 'Morgenhilsen på kontoret Eirik'
  trigger:
    platform: state
    entity_id: light.kontor_eirik_lys
    to: 'on'
  condition:
    condition: time
    after: '07:00:00'
    before: '10:00:00'
  action:
    service: tts.google_say
    entity_id: media_player.eirik_kontor
    data:
      message: >-
        God morgen Eirik, temperaturen ute er {{states('sensor.ute_dobbelsensor_temperature')|string|replace('.','komma')}} grader og været er {{states('weather.dark_sky')|replace('partly', 'delvis')|replace('cloudy', 'overskyet')|replace('sunny', 'solfylt')|replace('rain', 'regner')}}, temperaturen i drivhuset er {{states('sensor.drivhusny_temperature')|string|replace('.', 'komma')}} grader, det tar {{states('sensor.hjemmefra_til_jobb')}} minutter å kjøre til kontoret, akkurat nå strømmer {{states('sensor.tautulli')}} brukere fra plex serveren din, solen er {{states('sun.sun')|replace('_', ' ')|replace('above', 'over')|replace('below', 'under')|replace('horizon', 'horisonten')}}  
      language: 'no'
      cache: false

### Automatic lighting in downstairs pantry ###

- alias: 'Skru på kjellerbod'
  trigger:
    platform: state
    entity_id: binary_sensor.kjeller_boddor_contact
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.kjeller_bod_light

- alias: 'Skru av kjellerbod etter fem minutter'
  trigger:
    platform: state
    entity_id: binary_sensor.kjeller_boddor_contact
    from: 'on'
    to: 'off'
  action:
    - service: light.turn_off
      entity_id: light.kjeller_bod_light


### Added telegram notifications ### 


### Eirikz playing with Phil Hawthorns advanced person state ###

- alias: 'Sett Eirik som akkurat kommet hjem'
  trigger:
    - platform: state
      entity_id: device_tracker.life360_eirik_zakariassen
      from: 'not_home'
      to: 'home'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.eirik_status_dropdown
        option: 'Kom akkurat hjem'

- alias: 'Sett Eirik som Hjemme'
  trigger:
    - platform: state
      entity_id: input_select.eirik_status_dropdown
      to: 'home'
      for:
        minutes: 10
    - platform: state
      entity_id: input_select.eirik_status_dropdown
      from: 'Dro akkurat ut'
      to: 'Kom akkurat hjem'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.eirik_status_dropdown
        option: 'Hjemme'

- alias: 'Sett Eirik som akkurat dratt'
  trigger:
    - platform: state
      entity_id: device_tracker.life360_eirik_zakariassen
      from: 'home'
      to: 'not_home'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.eirik_status_dropdown
        option: 'Dro akkurat ut'

- alias: 'Sett Eirik som borte'
  trigger:
    - platform: state
      entity_id: input_select.eirik_status_dropdown
      to: 'Dro akkurat ut'
      for:
        minutes: 10
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.eirik_status_dropdown
        option: 'Ute'


- alias: 'Sett Eirik som bortreist'
  trigger:
    - platform: state
      entity_id: input_select.eirik_status_dropdown
      to: 'Ute'
      for:
        hours: 24
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.eirik_status_dropdown
        option: 'Bortreist'


- alias: 'Sett W som akkurat kommet hjem'
  trigger:
    - platform: state
      entity_id: device_tracker.life360_weronica
      from: 'not_home'
      to: 'home'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.w_status_dropdown
        option: 'Kom akkurat hjem'

- alias: 'Sett W som Hjemme'
  trigger:
    - platform: state
      entity_id: input_select.w_status_dropdown
      to: 'Kom akkurat hjem'
      for:
        minutes: 10
    - platform: state
      entity_id: input_select.w_status_dropdown
      from: 'Dro akkurat ut'
      to: 'Kom akkurat hjem'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.w_status_dropdown
        option: 'Hjemme'

- alias: 'Sett W som akkurat dratt'
  trigger:
    - platform: state
      entity_id: device_tracker.life360_weronica
      from: 'home'
      to: 'not_home'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.w_status_dropdown
        option: 'Dro akkurat ut'

- alias: 'Sett W som borte'
  trigger:
    - platform: state
      entity_id: input_select.w_status_dropdown
      to: 'Dro akkurat ut'
      for:
        minutes: 10
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.w_status_dropdown
        option: 'Ute'


- alias: 'Sett W som bortreist'
  trigger:
    - platform: state
      entity_id: input_select.w_status_dropdown
      to: 'Ute'
      for:
        hours: 24
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.w_status_dropdown
        option: 'Bortreist'


### Automatically raise the lights when making dinner, and dim when done ###

- alias: 'Matlaging'
  trigger:
    platform: state
    entity_id: light.kjokken_ventilator_light
    to: "on"
  action:
    - service: switch.turn_off
      entity_id: switch.circadian_lighting_kjokken
    - service: light.turn_on
      data:
        entity_id:
          - light.kjokken_lys
          - light.kjokkengruppe
        brightness: 254

- alias: 'Matlaging ferdig'
  trigger:
    platform: state
    entity_id: light.kjokken_ventilator_light
    to: "unavailable"
  action:
    - service: switch.turn_on
      entity_id: switch.circadian_lighting_kjokken

### Playing with xiaomi cube ###

- alias: Cube event flip90
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
    event_data:
      entity_id: binary_sensor.stuekube
      action_type: free_fall
  action:
    - service: notify.stuetv
      data:
        message: "Alva og mamma er så søte"

- alias: Cube side 0
  trigger:   
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Kube'
  condition:
    condition: template
    value_template: '{{ 0 == trigger.payload_json.side }}'
  action:
    - service: light.turn_on
      data:
        entity_id: light.alva_taklampe_light
        rgb_color: [255,0,0]

- alias: Cube side 1
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Kube'
  condition:
    condition: template
    value_template: '{{ 1 == trigger.payload_json.side }}'
  action: 
    - service: light.turn_on
      data:      
        entity_id: light.alva_taklampe_light
        rgb_color: [0,255,0]

- alias: Cube side 2
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Kube'
  condition:
    condition: template
    value_template: '{{ 2 == trigger.payload_json.side }}'
  action: 
    - service: light.turn_on
      data:      
        entity_id: light.alva_taklampe_light
        rgb_color: [0,0,255]

- alias: Cube side 3
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Kube'
  condition:
    condition: template
    value_template: '{{ 3 == trigger.payload_json.side }}'
  action: 
    - service: light.turn_on
      data:
        entity_id: light.alva_taklampe_light
        rgb_color: [255,255,0]

- alias: Cube side 4
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Kube'
  condition:
    condition: template
    value_template: '{{ 4 == trigger.payload_json.side }}'
  action: 
    - service: light.turn_on
      data:      
        entity_id: light.alva_taklampe_light
        rgb_color: [0,255,255]

- alias: Cube side 5
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Kube'
  condition:
    condition: template
    value_template: '{{ 5 == trigger.payload_json.side }}'
  action: 
    - service: light.turn_on
      data:
        entity_id: light.alva_taklampe_light
        rgb_color: [255,0,255]

- alias: Cube side 6
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Kube'
  condition:
    condition: template
    value_template: '{{ 6 == trigger.payload_json.side }}'
  action: 
    - service: light.turn_on
      data:
        entity_id: light.alva_taklampe_light
        rgb_color: [255,200,145]

### Playing with streams ###

### Doods scan on motion ###


### Telegram send video of triggered motion ###


### Dimming of lights while watching a movie ###

- alias: 'Stemning film starter'
  trigger:
    platform: state
    entity_id: media_player.sasuke_2
    from: 'idle'
    to: 'playing'
  action:
  - service: switch.turn_off
    entity_id: switch.circadian_lighting_stue
  - service: light.turn_off
    entity_id: light.kjokken_vindu
  - service: light.turn_off
    entity_id: light.stuebord
  - service: light.turn_on
    data:
      entity_id: light.stue
      brightness: 1
      transition: 3

- alias: 'Stemning film pauses'
  trigger:
    platform: state
    entity_id: media_player.sasuke_2   
    from: 'playing'
    to: 'paused'
  action:
  - service: switch.turn_off       
    entity_id: switch.circadian_lighting_stue
  - service: light.turn_on
    entity_id: light.kjokken_vindu
  - service: light.turn_on
    data:
      entity_id: light.stue
      brightness: 50
      transition: 3

- alias: 'Stemning film gjenopptas'
  trigger:
    platform: state
    entity_id: media_player.sasuke_2
    from: 'paused'
    to: 'playing'
  action:
  - service: switch.turn_off
    entity_id: switch.circadian_lighting_stue
  - service: light.turn_off
    entity_id: light.kjokken_vindu
  - service: light.turn_on
    data:
      entity_id: light.stue
      brightness: 1
      transition: 3
  - service: light.turn_off
    entity_id: light.stuebord

- alias: 'Stemning film stoppes'
  trigger:
    platform: state
    entity_id: media_player.sasuke_2   
    to: 'idle'
  action:
  - service: switch.turn_on       
    entity_id: switch.circadian_lighting_stue
  - service: light.turn_on
    entity_id: light.kjokken_vindu
  - service: light.turn_on
    entity_id: light.stuebord

### Upstairs living room light automations ###

- alias: Lys loft
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Loft Veggbryter'
  condition:
    condition: template
    value_template: '{{ "single" == trigger.payload_json.action }}'
  action:
    - service: input_select.select_next
      entity_id: input_select.loftlys
    - service: scene.turn_on
      data:
        entity_id: 'scene.{{ states.input_select.loftlys.state }}'

- alias: Lys loft følger fysisk bryter av
  trigger:
    platform: state
    entity_id: light.loft_taklys_1
    to: 'unavailable'
  action:
    - service: light.turn_off
      entity_id: light.loft

- alias: Lys loft følger fysisk bryter på
  trigger:
    platform: state
    entity_id: light.loft_taklys_1
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.loft


### Halloween lights automation

- alias: Skru på halloween
  trigger:
    platform: state
    entity_id: binary_sensor.trapp_ute
    from: 'off'
  action:
    - service: light.turn_on
      entity_id: light.halloween
      data:
        effect: '{{ (["Lightning", "Rainbow", "Flash", "Blink", "Fire Flicker", "Solid", "Chase", "Breathe"] | random) }}'
        rgb_color: ["{{range(256)|random}}","{{range(256)|random}}","{{range(256)|random}}"]
    - service: light.turn_on 
      entity_id: light.ute
      data:
        brightness: 100


- alias: Skru av halloween
  trigger:
    platform: state
    entity_id: binary_sensor.trapp_ute
    to: 'off'
    for:
      minutes: 3
  action:
    - service: light.turn_off
      entity_id: light.halloween

- alias: turn on an automation after three minutes
  trigger:
    platform: state
    entity_id: automation.fire
    to: 'off'
    for: '00:03:00'
  action:
    - service: homeassistant.turn_on
      entity_id: automation.fire


### Doorbell automation ###

- alias: 'Ringeklokke'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Ringeklokke'
  condition: 
    condition: template
    value_template: '{{ "single" == trigger.payload_json.action }}'

  action:
    - service: notify.stuetv
      data:
        message: "Noen ringer på døren"

    - service: media_player.play_media
      data:
        entity_id: media_player.kjokken
        media_content_id: http://192.168.1.40:8123/local/ringeklokke.mp3
        media_content_type: audio/mp3

    - service: media_player.play_media
      data:
        entity_id: media_player.w_kontor
        media_content_id: http://192.168.1.40:8123/local/ringeklokke.mp3
        media_content_type: audio/mp3

    - service: media_player.play_media
      data:
        entity_id: media_player.garasjemini
        media_content_id: http://192.168.1.40:8123/local/ringeklokke.mp3
        media_content_type: audio/mp3


    - service: media_player.play_media
      data:
        entity_id: media_player.eirik_kontor    
        media_content_id: http://192.168.1.40:8123/local/ringeklokke.mp3
        media_content_type: audio/mp3


### Automatic garage stuff ###

- alias: 'Garasjeport åpen i tre minutter'
  trigger:
    platform: state
    entity_id: binary_sensor.garasjeport_sensor
    to: 'on'
    for:
      minutes: 3
  action:
    service: notify.we_telegram
    data:
      message: "Garasjeporten har vært åpen i tre minutter"



- alias: 'garasjeportåpner'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/0x00158d0002130e2c'
  condition:
    condition: template
    value_template: '{{ "single" == trigger.payload_json.action }}'
  action:
    - service: switch.toggle
      entity_id: switch.garasjedor


### Automatic vacuuming of kitchen every day ###

- alias: 'Automatisk Støvsuging av kjøkken'
  trigger:
    platform: time
    at: '03:00:00'
  action:
    - service: mqtt.publish
      data:
        topic: valetudo/akino/MapSegmentationCapability/clean/set
        payload: '16'


### Bedroom bedside lights ###

- alias: 'W skru på soverom W'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Soverom Bryter W'
  condition:
    condition: template
    value_template: '{{ "single_left" == trigger.payload_json.action }}'
  action:
    - service: light.toggle
      entity_id: light.soverom_lampe_w

- alias: 'W skru på soverom Eirik'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Soverom Bryter W'
  condition:
    condition: template
    value_template: '{{ "single_right" == trigger.payload_json.action }}'
  action:
    - service: light.toggle 
      entity_id: light.eirik_soverom_2

- alias: 'Eirik skru på soverom W'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Soverom Bryter Eirik'
  condition:
    condition: template
    value_template: '{{ "single_left" == trigger.payload_json.action }}'
  action:
    - service: light.toggle 
      entity_id: light.soverom_lampe_w

- alias: 'Eirik skru på soverom Eirik'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Soverom Bryter Eirik'
  condition:
    condition: template
    value_template: '{{ "single_right" == trigger.payload_json.action }}'
  action:
    - service: light.toggle
      entity_id: light.eirik_soverom_2


### Automatic watering of greenhouse ###

- alias: 'Drivhusvanning på sommer'
  trigger:
    platform: time_pattern
    hours: /3
  condition:
    condition: time
    after: '05:59:00'
    before: '18:01:00'
  action:
    - service: switch.turn_on
      entity_id: switch.drivhus_vanning_ny
    - delay: '00:02:00'
    - service: switch.turn_off
      entity_id: switch.drivhus_vanning_ny


### Notify me when either UPS loses mains power ###

- alias: 'Melding når strøm feiler på LoftUPS'
  trigger:
    platform: state
    entity_id: sensor.loftups_status_data
    from: 'OL'
  action:
    - service: notify.eirikz_telegram
      data:
        title: "LoftUPS har mistet strøm"
        message: "LoftUPS har mistet strøm"

- alias: 'Melding når strøm feiler på KjellerUPS'
  trigger:
    platform: state
    entity_id: sensor.ups_status_data
    from: 'OL'
  action:
    - service: notify.eirikz_telegram
      data:
        title: "KjellerUPS har mistet strøm"
        message: "KjellerUPS har mistet strøm"


### Notify me when either UPS gets mains power back ###

- alias: 'Melding når strøm er ok på LoftUPS'
  trigger:
    platform: state
    entity_id: sensor.loftups_status_data
    to: 'OL'
  action:
    - service: notify.eirikz_telegram
      data:
        title: "LoftUPS har fått strømmen tilbake"
        message: "LoftUPS har fått strømmen tilbake"
             
- alias: 'Melding når strøm er ok på KjellerUPS'
  trigger:
    platform: state
    entity_id: sensor.ups_status_data    
    to: 'OL'
  action:
    - service: notify.eirikz_telegram
      data:
        title: "KjellerUPS har fått strømmen tilbake"
        message: "KjellerUPS har fått strømmen tilbake"


- alias: 'Drivhusstatusbilde'

  trigger:
    platform: time_pattern
    hours: /3
  condition:
    condition: time
    after: '06:59:00'
    before: '18:01:00'
  action:
    - service: camera.snapshot
      data:
        entity_id: camera.drivhuskamera
        filename: '/tmp/drivhus.jpg'
    - service: notify.eirikz_telegram
      data:
        title: Drivhus
        message: "Drivhuskamera"
        data:
          photo:
            - file: /tmp/drivhus.jpg
              caption: Drivhus


- alias: '3D Print er ferdig'

  trigger:
    platform: state
    entity_id: sensor.octoprint_current_state
    from: 'Printing'
  action:
    - service: notify.eirikz_telegram
      data:
        message: "Printen din er _kanskje_ ferdig?"
    - service: camera.snapshot
      data:
        entity_id: camera.print
        filename: '/tmp/print.jpg'
    - service: notify.eirikz_telegram
      data:
        title: Print
        message: "Print"
        data:
          photo:
            - file: /tmp/print.jpg
              caption: print


- alias: 'Mikrobryter'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Kjokken Mikrobryter'
  condition:
    condition: template
    value_template: '{{ "single" == trigger.payload_json.action }}'
  action:
    service: switch.toggle
    entity_id: switch.mikro


- alias: 'Teams ledig'
  trigger:
    platform: state
    entity_id: sensor.microsoft_teams_availability
    to: Available

  action: 
    service: light.turn_on
    data:
      entity_id: light.teamskube
      rgb_color: [0,255,0]
      brightness_pct: 40

- alias: 'Teams opptatt'
  trigger:
    platform: state
    entity_id: sensor.microsoft_teams_availability
    to: Busy

  action:
    service: light.turn_on
    data:
      entity_id: light.teamskube
      rgb_color: [255,0,0]
      brightness_pct: 40


- alias: 'Teams Offline'
  trigger:
    platform: webhook
    webhook_id: gone

  action:
    service: light.turn_on
    data:
      entity_id: light.teamskube
      rgb_color: [0,0,255]
      brightness_pct: 40

- alias: 'Teams away'
  trigger:
    platform: state
    entity_id: sensor.microsoft_teams_availability
    to: Away

  action:
    service: light.turn_on
    data:
      entity_id: light.teamskube
      rgb_color: [255,255,0]
      brightness_pct: 40





- alias: 'Styre alle lys soverom oppover'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Soverom Fjernkontroll'
  condition:
    condition: template
    value_template: '{{ "up-press" == trigger.payload_json.action }}'
  action:
    - service: light.turn_on
      data:
        entity_id: light.soverom_lys
        brightness_pct: 100

- alias: 'Styre alle lys soverom nedover'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Soverom Fjernkontroll'
  condition:
    condition: template
    value_template: '{{ "down-press" == trigger.payload_json.action }}'
  action:
    - service: light.turn_on
      data:
        entity_id: light.soverom_lys
        brightness_pct: 3

    


- alias: "Adaptive lighting: reset manual_control after 30 minutes"
  mode: parallel
  trigger:
    platform: event
    event_type: adaptive_lighting.manual_control
  variables:
    light: "{{ trigger.event.data.entity_id }}"
    switch: "{{ trigger.event.data.switch }}"
  action:
    - delay: "00:30:00"
    - condition: template
      value_template: "{{ light in state_attr(switch, 'manual_control') }}"
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: "{{ switch }}"
        lights: "{{ light }}"
        manual_control: false



### Tell me about temperature sensors that are broken ###

- alias: "Temperatursensoren er trolig død"
  trigger:
    platform: state
    entity_id: 
      - sensor.alva_temperatur_temperature
      - sensor.bad_temperatur_temperature
      - sensor.bod_temperatur_temperature
      - sensor.garasje_temperatur_temperature
      - sensor.loft_temperatur_temperature
      - sensor.soverom_temperatur_temperature
      - sensor.vaskerom_temperatur_temperature
    for: '03:00:00'
  action:
    - service: notify.eirikz_telegram
      data:
        message: "Temperatursensor {{ trigger.to_state.name }} har problemer"


- alias: Skru på loftlys
  trigger:
    platform: state
    entity_id: binary_sensor.loft_trappesensor_occupancy
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.loft_lys

- alias: Skru av trappelyslys etter fem minutter
  trigger:
    platform: state
    entity_id: binary_sensor.loft_trappesensor_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 5
  action:
    - service: light.turn_off
      entity_id: light.loft_trappelys





- alias: 'Skru pa loftlys tvstue'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Loft tvstue'
  condition:
    condition: template
    value_template: '{{ "toggle" == trigger.payload_json.action }}'
  action:
    - service: light.toggle
      entity_id: light.loft_lys


- alias: 'Vaskemaskinen er ferdig'
  trigger:
    entity_id: sensor.vaskemaskin_program_progress
    platform: state
    to: '100'
  action: 
    - service: notify.eirikz_telegram
      data:
        title: "vaskemaskin"
        message: "ferdig"


- alias: Lys W Kontor
  trigger:
    platform: state
    entity_id: sensor.w_kontor_bryter_action
    to: 'on-press'
  action:
    - service: input_select.select_next
      entity_id: input_select.w_kontor
    - service: scene.turn_on
      data:
#      target:
        entity_id: 'scene.{{ states.input_select.w_kontor.state }}'
#      data:
        transition: 2

- alias: Lys W Kontor av
  trigger:
    platform: state
    entity_id: sensor.w_kontor_bryter_action
    to: 'off-press'
  action:
    - service: light.turn_off
      entity_id: light.w_kontor_lys_gruppe


- alias: 'Skru på loftlys'
  trigger:
    platform: state
    entity_id: binary_sensor.loft_aktivitet
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.loft_lys

- alias: 'Skru av loftlys'
  trigger:
    - platform: state
      entity_id: binary_sensor.loft_aktivitet
      from: 'on'
      to: 'off'
      for: '00:12:00'
  condition:
    - condition: state
      entity_id: binary_sensor.e_og_w_lys
      state: 'off'
      for: '00:06:00'
  action:
    - service: light.turn_off
      entity_id: light.loft_lys


- alias: Notify of events
  trigger:
    platform: mqtt
    topic: frigate/events
  action:
    - service: notify.eirikz_telegram
      data:
        title: Kamera
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected.'
        data:
          photo: 
            - url: !secret pictureurlevent


- alias: 'Alva nattlys'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/Alva Nattlys Bryter'
  condition:
    condition: template
    value_template: '{{ "single" == trigger.payload_json.action }}'
  action:
    service: switch.toggle
    entity_id: switch.alva_nattlys_stopsel

- alias: 'Alva dor apnet'
  trigger:
    platform: state
    entity_id: binary_sensor.alva_dorsensor_contact
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: media_player.stueforsterker
        state: 'on'
      - condition: time
        after: '19:00:00'
        before: '23:00:00'
  action:
    service: media_player.volume_mute
    entity_id: media_player.stueforsterker
    data:
      is_volume_muted: true

- alias: 'Alva dor lukket'
  trigger:
    platform: state
    entity_id: binary_sensor.alva_dorsensor_contact
    to: 'off' 
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: media_player.stueforsterker
        state: 'on'
      - condition: time
        after: '19:00:00'
        before: '23:00:00'
  action:
    service: media_player.volume_mute
    entity_id: media_player.stueforsterker
    data:
      is_volume_muted: false


- alias: 'Alva er ute av sengen'
  trigger:
    platform: state
    entity_id: binary_sensor.alva_dorsensor_contact
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.stue_lys
        state: 'off'
      - condition: time
        after: '23:00:00'
        before: '06:00:00'
  action:
    service: light.turn_on
    target:
      entity_id: light.soverom_hodegavel
    data:
      brightness: 15
      rgb_color: [0,255,0]

- alias: 'Alva er tilbake i sengen'
  trigger:
    platform: state
    entity_id: binary_sensor.alva_dorsensor_contact
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.stue_lys
        state: 'off'
      - condition: time
        after: '23:00:00'
        before: '06:00:00'
  action:
    service: light.turn_on
    target:
      entity_id: light.soverom_hodegavel
    data:
      brightness: 8
      rgb_color: [255,63,0]

- alias: 'Alva legg deg ned'
  trigger:
    platform: time
    at: '19:00:00'
  action:
    service: light.turn_on
    target:
      entity_id: light.alva_sengelys
    data:
      brightness: 110
      rgb_color: [255,0,0]

- alias: 'Alva du kan stå opp'
  trigger:
    platform: time
    at: '07:00:00'
  action:
    service: light.turn_on
    target:
      entity_id: light.alva_sengelys
    data:
      brightness: 110
      rgb_color: [0,255,0]

- alias: 'Alva sengelys av'
  trigger:
    platform: time
    at: '08:00:00'
  action:
    service: light.turn_off
    target:
      entity_id: light.alva_sengelys



### Utelys ###

- alias: 'Skru pa utelys nar det er morkt ute'
  trigger:
  - platform: numeric_state
    entity_id: sensor.ute_lysensor_illuminance_lux
    below: 6
    for: '00:10:00'
  - platform: time
    at: '23:59:00'
  condition:
  - condition: numeric_state
    entity_id: sensor.ute_lysensor_illuminance_lux
    below: 6
  - condition: time
    before: '23:58:00'
    after: '16:00:00'
  action:
    service: light.turn_on
    target:
      entity_id: light.utegruppe

- alias: 'Skru av utelys nar det er lyst ute'
  trigger:
  - platform: numeric_state
    entity_id: sensor.ute_lysensor_illuminance_lux
    above: 6
    for: '00:10:00'
  - platform: time
    at: '09:00:01'
  condition:
  - condition: numeric_state
    entity_id: sensor.ute_lysensor_illuminance_lux
    above: 6
  - condition: time
    before: '09:00:00'
    after: '04:00:00'
  action:
    service: light.turn_off
    target:
      entity_id: light.utegruppe
